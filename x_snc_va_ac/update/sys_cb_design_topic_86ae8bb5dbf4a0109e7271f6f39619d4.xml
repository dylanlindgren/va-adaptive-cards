<?xml version="1.0" encoding="UTF-8"?><record_update sys_domain="global" table="sys_cb_design_topic">
    <sys_cb_design_topic action="INSERT_OR_UPDATE">
        <compiled_topic display_value="Simple adaptive card">79ae8bb5dbf4a0109e7271f6f39619d0</compiled_topic>
        <design_definition>{"type":"FlowTopic","triggers":[{"type":"Trigger","name":"58aa57be74de47069ecffce9860f8a89","triggerType":"request","applicability":{"type":"Applicability","mode":"script","value":"true"},"id":"58aa57be74de47069ecffce9860f8a89"}],"goals":[{"name":"primary","trigger_id":"58aa57be74de47069ecffce9860f8a89","nodes":[{"type":"StartGoal","goal_id":"primary","greeting_msg":{"type":"String","mode":"string","value":""},"id":"d881f8f58b6842d1abd83dea0de5b342","name":"Start"},{"type":"CustomNode","name":"Adaptive card (response only)","mode":"output","generateDataFunction":"function adaptiveCardControlDataFunc() {\n\n  var cardTemplate = vaInputs.card_template;\n\n  if (cardTemplate.toString() === '') {\n      cardTemplate = \"{}\";\n  }\n\n  cardTemplate = JSON.parse(cardTemplate)\n  \n  var cardData = vaInputs.card_data;\n\n  if (cardData.toString() === '') {\n      cardData = \"{}\";\n  }\n\n  cardData = JSON.parse(cardData)\n\n  gs.info('cd ' + typeof cardData);\n  gs.info('ct ' + typeof cardTemplate);\n  \n  gs.info(JSON.stringify({\n      cardTemplate: cardTemplate,\n      cardData: cardData\n  }));\n\n  return {\n      cardTemplate: cardTemplate,\n      cardData: cardData\n  };\n}","messageTranscriptFunction":"function(controlData) {\n    /* Build a message for the custom control that will be recorded in the transcript\n\n        return 'The CustomControl myCustomInputControl just rendered, with controlData: '\n            + JSON.stringify(controlData);\n   */\n\n  return \"Adaptive card displayed\"\n}","unsupportedDeviceMessage":{"type":"String","mode":"string","value":"Sorry, this channel is not supported"},"id":"8c286ec6f6434719b3f4d2293976acb0","goal_id":"primary","applicability":{"type":"Applicability","mode":"script","value":"true"}},{"type":"TerminateGoal","goal_id":"primary","confirmation_msg":{"type":"String","mode":"string","value":""},"id":"e27adc72ba554977ad41337f397142f2","name":"End"}],"edges":[{"type":"Edge","source_node_id":"d881f8f58b6842d1abd83dea0de5b342","target_node_id":"8c286ec6f6434719b3f4d2293976acb0","id":"23640774739d4d01b245b4a25541745b"},{"type":"Edge","source_node_id":"8c286ec6f6434719b3f4d2293976acb0","target_node_id":"e27adc72ba554977ad41337f397142f2","id":"420d2d40ab9a4fac9d5b8f8c2778a218"}],"id":"primary"}],"script_variables":[],"glide_variables":[{"type":"Reference","table":"sys_user","id":"current-user","name":"user","formatType":"text","secure":false,"sensitive":false,"list":false},{"type":"String","name":"card_data","list":false,"id":"0f1f944451fd454dbe272e6f375f2f6d","formatType":"text","metadata":{"libraryMappingType":"input"},"secure":false,"sensitive":false},{"type":"String","name":"card_template","list":false,"id":"6862a3a5928d46f7ae94f244e5754bd2","formatType":"text","metadata":{"libraryMappingType":"input"},"secure":false,"sensitive":false}],"applicability":{"type":"Applicability","mode":"script","value":"true"},"roles":[],"scope":"13dcacaf1be4e8107efcda09dc4bcbc1","library-usage":{"type":"Library","input-parameters":[{"name":"card_data","label":"card_data","default-value":"\"\"","required":true,"metadata":{"type":"String","list":false,"items":[],"use_items":false},"id":"0f1f944451fd454dbe272e6f375f2f6d","type":"String","hint":""},{"name":"card_template","label":"card_template","default-value":"\"\"","required":true,"metadata":{"type":"String","list":false,"items":[],"use_items":false},"id":"6862a3a5928d46f7ae94f244e5754bd2","type":"String","hint":""}],"return-values-mapping":[]},"domain":"global","topic_type":"CUSTOM_OUTPUT","channels":[],"id":"d23e83b5dbf4a0109e7271f6f396192a","name":"Simple adaptive card","key_phrases":[],"nlu_provider":"","nlu_model":"","nlu_model_label":"","nlu_intent":"","nlu_intent_label":"","flexible_conversation_switching":true,"autopilot_topic":false,"design_categories":[{"name":null,"visible":false,"sysId":"bea6b0b5dbbc60109e7271f6f39619d1"}],"triggerable_by_notification":false,"library":true,"readOnly":false,"nluMapping":"[]"}</design_definition>
        <design_topic_id>d23e83b5dbf4a0109e7271f6f396192a</design_topic_id>
        <name>Simple adaptive card</name>
        <sys_class_name>sys_cb_design_topic</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2020-12-01 11:40:07</sys_created_on>
        <sys_domain>global</sys_domain>
        <sys_id>86ae8bb5dbf4a0109e7271f6f39619d4</sys_id>
        <sys_mod_count>15</sys_mod_count>
        <sys_name>FlowTopic</sys_name>
        <sys_package display_value="Adaptive Cards for Virtual Agent" source="x_snc_va_ac">13dcacaf1be4e8107efcda09dc4bcbc1</sys_package>
        <sys_policy/>
        <sys_scope display_value="Adaptive Cards for Virtual Agent">13dcacaf1be4e8107efcda09dc4bcbc1</sys_scope>
        <sys_update_name>sys_cb_design_topic_86ae8bb5dbf4a0109e7271f6f39619d4</sys_update_name>
        <sys_updated_by>dylan.lindgren@snc</sys_updated_by>
        <sys_updated_on>2022-06-19 10:01:45</sys_updated_on>
        <type>FlowTopic</type>
    </sys_cb_design_topic>
</record_update>
